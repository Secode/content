id: 3635efba-6320-42ed-84fa-4795a30c7308
version: -1
name: Handle TD events
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: c2b5562c-754c-4f4a-832a-60dace59b9f2
    type: start
    task:
      id: c2b5562c-754c-4f4a-832a-60dace59b9f2
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "12"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 380,
          "y": -200
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "1":
    id: "1"
    taskid: af05737a-33b1-4310-8079-6d8813d45b22
    type: regular
    task:
      id: af05737a-33b1-4310-8079-6d8813d45b22
      version: -1
      name: Fetch PCAP
      description: Collecting blobs, most commonly pcap from an incident
      script: '|||fetch-blobs'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      event_id:
        complex:
          root: incident
          accessor: labels.sha
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 380,
          "y": 270
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "5":
    id: "5"
    taskid: 134df418-de3e-4d15-892c-8c086fc1b608
    type: condition
    task:
      id: 134df418-de3e-4d15-892c-8c086fc1b608
      version: -1
      name: Check if the download was successful
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "7"
      "yes":
      - "11"
    separatecontext: false
    conditions:
    - label: "YES"
      condition:
      - - operator: isTrue
          left:
            value:
              simple: CTS.HasBlob
            iscontext: true
    - label: "NO"
      condition:
      - - operator: isFalse
          left:
            value:
              simple: CTS.HasBlob
            iscontext: true
    view: |-
      {
        "position": {
          "x": 380,
          "y": 430
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "7":
    id: "7"
    taskid: 113a4d40-f115-4da8-82c5-ee52ab2c01e8
    type: title
    task:
      id: 113a4d40-f115-4da8-82c5-ee52ab2c01e8
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 620,
          "y": 900
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "9":
    id: "9"
    taskid: 3a36d49a-b71d-404b-8464-de3b386a10ee
    type: playbook
    task:
      id: 3a36d49a-b71d-404b-8464-de3b386a10ee
      version: -1
      name: GenericPolling
      description: |-
        Use this playbook as a sub-playbook to block execution of the master playbook until a remote action is complete.
        This playbook implements polling by continuously running the command in Step \#2 until the operation completes.
        The remote action should have the following structure:

        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
      playbookName: GenericPolling
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    scriptarguments:
      AdditionalPollingCommandArgNames:
        simple: timestamp
      AdditionalPollingCommandArgValues:
        complex:
          root: incident
          accessor: labels.last_updated
      Ids:
        simple: ${CTS.Blobs.ID}
      Interval:
        simple: "1"
      PollingCommandArgName:
        simple: event_id
      PollingCommandName:
        simple: poll-blobs
      Timeout:
        simple: "5"
      dt:
        simple: CTS.Blobs(val.Status!=='release').ID
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 0
    view: |-
      {
        "position": {
          "x": 380,
          "y": 100
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "11":
    id: "11"
    taskid: 1c1a8cf9-e163-4554-800d-5730d3d0eebd
    type: playbook
    task:
      id: 1c1a8cf9-e163-4554-800d-5730d3d0eebd
      version: -1
      name: PCAP Analysis
      playbookName: PCAP Analysis
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "7"
    scriptarguments:
      AdvancedSearchFilter: {}
      AutoDetonateFiles:
        simple: "True"
      ExtractedFilesLimit:
        simple: "5"
      FileExtensionFilter: {}
      FileTypeFilter: {}
      FilterType:
        simple: inclusive
      IPAddressToSearch: {}
      InternalEmailDomainName: {}
      InternalIPRange: {}
      InternalUrlName: {}
      PcapFileEntryID:
        complex:
          root: ${File}
          filters:
          - - operator: inList
              left:
                value:
                  simple: File.Name
                iscontext: true
              right:
                value:
                  simple: incident.pcapfile.name
                iscontext: true
            - operator: isEqualString
              left:
                value:
                  simple: File.Extension
                iscontext: true
              right:
                value:
                  simple: pcap
            - operator: isEqualString
              left:
                value:
                  simple: File.Extension
                iscontext: true
              right:
                value:
                  simple: cap
            - operator: isEqualString
              left:
                value:
                  simple: File.Extension
                iscontext: true
              right:
                value:
                  simple: pcapng
      ProtocolToSearch: {}
      QueryOperator:
        simple: and
      RegexToSearch: {}
      RsaDecryptKeyEntryID:
        complex:
          root: File
          filters:
          - - operator: inList
              left:
                value:
                  simple: File.Name
                iscontext: true
              right:
                value:
                  simple: incident.pcapencryptionkey.name
                iscontext: true
            - operator: isEqualString
              left:
                value:
                  simple: File.Extension
                iscontext: true
              right:
                value:
                  simple: key
          accessor: EntryID
      RunFileCarving:
        simple: "true"
      RunParsingAndEnrichment:
        simple: "true"
      TCPPortsToSearch: {}
      UDPPortsToSearch: {}
      WhichIndicatorTypeToEnrich:
        simple: ip,url,email
      WpaPassword: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 270,
          "y": 710
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "12":
    id: "12"
    taskid: 06c6ca2f-5e8c-4386-8462-50431b696806
    type: regular
    task:
      id: 06c6ca2f-5e8c-4386-8462-50431b696806
      version: -1
      name: Enable GenericPolling by polling for blobs
      description: Check if blobs is available
      script: NTT Cyber Threat Sensor|||poll-blobs
      type: regular
      iscommand: true
      brand: NTT Cyber Threat Sensor
    nexttasks:
      '#none#':
      - "9"
    scriptarguments:
      event_id:
        simple: ${incident.labels.sha}
      timestamp:
        simple: ${incident.labels.last_updated}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 380,
          "y": -70
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
view: |-
  {
    "linkLabelsPosition": {
      "5_11_yes": 0.57,
      "5_7_#default#": 0.16
    },
    "paper": {
      "dimensions": {
        "height": 1165,
        "width": 730,
        "x": 270,
        "y": -200
      }
    }
  }
inputs: []
outputs:
- contextPath: CTS.EventID
  type: string
- contextPath: CTS.OccuredTime
  type: date
